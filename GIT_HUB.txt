What is Git?

Git is a popular version control system. It was created by Linus Torvalds in 2005, and has been maintained by Junio Hamano since then.

It is used for:

    Tracking code changes
    Tracking who made changes
    Coding collaboration

What does Git do?

    Manage projects with Repositories
    Clone a project to work on a local copy
    Control and track changes with Staging and Committing
    Branch and Merge to allow for work on different parts and versions of a project
    Pull the latest version of the project to a local copy
    Push local updates to the main project

Working with Git

    Initialize Git on a folder, making it a Repository
    Git now creates a hidden folder to keep track of changes in that folder
    When a file is changed, added or deleted, it is considered modified
    You select the modified files you want to Stage
    The Staged files are Committed, which prompts Git to store a permanent snapshot of the files
    Git allows you to see the full history of every commit.
    You can revert back to any previous commit.
    Git does not store a separate copy of every file in every commit, but keeps track of changes made in each commit!
Git --version
git status
git init
===============configure git=================
Use global to set the username and e-mail for every repository on your computer.

If you want to set the username/e-mail for just the current repo, you can remove global	
git config --global user.name "Mera-project"
git config --global user.email "it-changereeleasesupport@ltfs.com"

====================================================================
Mkdir meraproject
cd meraproject
git init
git status
====================================================================
((add files in git hub and git))
touch meratest.txt
cat >meratest.txt
Hi this is my first git hub file. 
cat meratest.txt
ls
git status
git init
git commit
((Now Git is aware of the file, but has not added it to our repository!

Files in your Git repository folder can be in one of 2 states:

    Tracked - files that Git knows about and are added to the repository
    Untracked - files that are in your working directory, but not added to the repository

Â When you first add files to an empty repository, they are all untracked. To get Git to track them, you need to stage them, or add them to the staging environment.))

	Git Staging Environment
===============================
One of the core functions of Git is the concepts of the Staging Environment, and the Commit.

As you are working, you may be adding, editing and removing files. But whenever you hit a milestone or finish a part of the work, you should add the files to a Staging Environment.Staged files are files that are ready to be committed to the repository you are working on.

git add meratext.txt
git init
git status
git commit
git add --all (To add more than one file)
The shorthand command for git add --all is git add -A
======================================================Git Commit
GIT COMMIT:-
Since we have finished our work, we are ready move from stage to commit for our repo.

Adding commits keep track of our progress and changes as we work. Git considers each commit change point or "save point". It is a point in the project you can go back to if you find a bug, or want to make a change.

When we commit, we should always include a message.

By adding clear messages to each commit, it is easy for yourself (and others) to see what has changed and when.

git commit -m "First release of Hello World!"

The commit command performs a commit, and the -m "message" adds a message.
The Staging Environment has been committed to our repo, with the message:
"First release of Hello World!"
Git Commit without Stage

Sometimes, when you make small changes, using the staging environment seems like a waste of time. It is possible to commit changes directly, skipping the staging environment. The -a option will automatically stage every changed, already tracked file. 

Warning: Skipping the Staging Environment is not generally recommended.Skipping the stage step can sometimes make you include unwanted changes.

====================================
git status --short


Note: Short status flags are:

    ?? - Untracked files
    A - Files added to stage
    M - Modified files
    D - Deleted files

git commit -a -m "Updated index.html with a new line"
===============================================================================
Git Commit Log
To view the history of commits for a repository, you can use the log command:
git log
=====================================================
Git Help

If you are having trouble remembering commands or options for commands, you can use Git help. There are a couple of different ways you can use the help command in command line:

    git command -help -  See all the available options for the specific command
    git help --all -  See all possible commands

Working with Git Branches

In Git, a branch is a new/separate version of the main repository.
Branches allow you to work on different parts of a project without impacting the main branch.
When the work is complete, a branch can be merged with the main project.
New Git Branch
We are working in our local repository, and we do not want to disturb or possibly wreck the main project.
==============================================================================
git branch mera-bhart-mahan
git branch (show all the branch)
(We can see the new branch with the name "hello-world-images", but the * beside master specifies that we are currently on that branch.checkout is the command used to check out a branch. Moving us from the current branch, to the one specified at the end of the command)
git checkout mera-bhart-mahan
git checkout master
git checkout -b mera-bhart-mahan (Switched to a new branch 'emergency-fix')

We need to merge the branch after fix the issue
git checkout master
git merge mera-bharat-mahan
git merge emergency-fix
git branch -d emergency-fix (delete the branch)
Deleted branch emergency-fix (was dfa79db).

Git GitHub Getting Started
=================================================================
Create a Repository on GitHub

git remote add origin https://github.com/w3schools-test/hello-world.git
git remote add origin URL specifies that you are adding a remote repository, with the specified URL, as an origin to your local Git repo.

Now we are going to push our master branch to the origin url, and set it as the default remote branch:
